name: Generate and commit codecov badge

on:
  workflow_call:
    inputs:
      context:
        required: true
        type: string
    secrets:
      BOT_NAME:
        required: true
      BOT_MAIL:
        required: true
      BOT_PAT:
        required: true

jobs:
  merge-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: coverage

      - name: merge coverages
        run: npx --yes istanbul-merge --out merged/coverage.json $(find coverage -type f )

      - name: output coverage report
        run: npx nyc report -t merged --reporter text

      - uses: actions/upload-artifact@v3
        with:
          name: merged-coverage-report
          path: merged/coverage.json

  generate-and-commit-badge:
    runs-on: ubuntu-latest
    needs: merge-coverage
    # Only push the svg on main branch
    if: ${{ github.ref == 'refs/pull/292/merge' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: dopeshot/beyond-life-codecov
          token: ${{ secrets.BOT_PAT }}
          ref: main

      - uses: actions/download-artifact@v3
        with:
          name: merged-coverage-report
          path: merged

      - name: create dir if needed
        run: mkdir -p badges

      - name: generate badge
        run: |
          cov=$(npx nyc report -t merged --reporter text-summary | grep -oP 'Statements\s+:\s+\K\d+')
          color=$(if (( cov > 90 )); then echo "brightgreen"; elif (( cov >= 80 )); then echo "green"; elif (( cov >= 70 )); then echo "yellow"; elif (( cov >= 50 )); then echo "orange"; else echo "red"; fi)
          npx --yes badge-maker  ${{ inputs.context }}-coverage ${cov}% $color > badges/${{ inputs.context }}-coverage.svg

      - name: Commit
        run: |
          git config user.name ${{ secrets.BOT_NAME }}
          git config user.email ${{ secrets.BOT_MAIL }}
          git add badges/${{ inputs.context }}-coverage.svg
          git commit -m "[no ci] ${{ inputs.context }} coverage" || echo "No changes to commit"

      - name: Push
        run: git push

  post-pr-comment:
    runs-on: ubuntu-latest
    needs: merge-coverage
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: merged-coverage-report
          path: merged

      - name: Extract branch name
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr '/' '_')"
        id: extract_branch

      - name: Prepare comment
        # Overview with details as markdown
        run: |
          echo "# ${{ inputs.context }} Coverage" > comment.txt
          echo >> comment.txt
          npx nyc report -t merged --reporter text |  sed -n 2,4p  >> comment.txt
          echo >> comment.txt
          echo "[HTML Report](https://codecov.siebtesleben.de/${{ steps.extract_branch.outputs.branch }}/${{ inputs.context }})" >> comment.txt
          echo >> comment.txt
          echo "<details open><summary> Full coverage report </summary>" >> comment.txt
          echo >> comment.txt
          npx nyc report -t merged --reporter text |  tail -n +2 | head -n -1 >> comment.txt
          echo >> comment.txt
          echo "</details>" >> comment.txt

      - name: Comment coverage on PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          filepath: comment.txt
          reactions: rocket
          comment_tag: ${{inputs.context}}codecov


  generate-html-report:
    runs-on: ubuntu-latest
    needs: merge-coverage
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: ${{ inputs.context }}/merged

      - name: generate html
        run: |
          npx nyc report -t ${{ inputs.context }}/merged --reporter html --report-dir ${{ inputs.context }}/coverage-html

      - uses: actions/upload-artifact@v3
        with:
          name: html-coverage-report
          path: ${{ inputs.context }}/coverage-html

  deploy-html-report:
    runs-on: ubuntu-latest
    needs: generate-html-report 
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: dopeshot/beyond-life-codecov
          token: ${{ secrets.BOT_PAT }}
          ref: main

      - name: Extract branch name
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr '/' '_')"
        id: extract_branch

      - uses: actions/download-artifact@v3
        with:
          name: html-coverage-report 
          path: ${{ steps.extract_branch.outputs.branch }}/${{ inputs.context }} 

      - name: Commit
        run: |
          git config user.name ${{ secrets.BOT_NAME }}
          git config user.email ${{ secrets.BOT_MAIL }}
          git add ./${{ steps.extract_branch.outputs.branch }}/${{ inputs.context }} 
          git commit -m "${{ inputs.context }} coverage for branch ${{ steps.extract_branch.outputs.branch}}" || echo "No changes to commit"

      - name: Push
        run: git push
